# Process this file with autoconf to produce a configure script.
AC_PREREQ([2.54])

AC_INIT([ngs], [0.0.3], [sylvain foret at anu edu au])
AC_CONFIG_AUX_DIR(build)
AC_CONFIG_MACRO_DIR(build)
AC_CONFIG_SRCDIR([src/libngs/ngs_fastq.h])
AM_INIT_AUTOMAKE(AC_PACKAGE_TARNAME, AC_PACKAGE_VERSION)
AM_CONFIG_HEADER(config.h)

# Checks for programs.

AC_PROG_CC
AC_ISC_POSIX
AC_PROG_LIBTOOL
AM_PROG_CC_STDC
AM_PROG_LEX
PKG_PROG_PKG_CONFIG

# Checks for pkg-config
### TODO

# Checks for libraries.

PKG_CHECK_MODULES([GLIB], [glib-2.0 >= 2.16.0])
AC_SUBST(GLIB_CFLAGS)
AC_SUBST(GLIB_LIBS)

# Checks for header files.

AC_HEADER_STDC
AC_CHECK_HEADERS([stdlib.h])

# Checks for typedefs, structures, and compiler characteristics.

AC_C_CONST

# Checks for library functions.

AC_CHECK_FUNCS([strtol])

changequote(,)dnl
if test "x$GCC" = "xyes"; then
  case " $CFLAGS " in
  *[\ \	]-Wall[\ \	]*) ;;
  *) CFLAGS="$CFLAGS -Wall" ;;
  esac
fi
changequote([,])dnl

AC_CHECK_PROG(PDFLATEX, pdflatex, pdflatex)
if test -z "$PDFLATEX"; then
    AC_MSG_WARN([Unable to create PDF version of the user manual.])
fi

AM_CONDITIONAL([HAVE_PDFLATEX], test -n "$PDFLATEX")

AC_SUBST(gbpplugindir)

AC_CONFIG_FILES([
	Makefile
    doc/Makefile
	src/Makefile
	src/bin/Makefile
	src/libngs/Makefile
	src/scripts/Makefile
	src/test/Makefile
	])
AC_OUTPUT
